{"version":3,"sources":["pages/Students/Students.js","pages/Students/StudentsContainer.js","pages/Message/Message.js","pages/Message/MessageContainer.js","components/Header/Header.js","components/Layout/Layout.js","App.js","index.js"],"names":["Students","list","addUser","editUser","deleteUser","useState","firstName","setFirstName","lastName","setLastName","editCurrentItem","setEditCurrentItem","firstNameEdited","editFirstName","lastNameEdited","editLastName","isModalShow","setModal","toggleModal","randomId","parseInt","Math","random","Date","isAddStudentValid","studentsList","map","student","index","ListGroupItem","key","id","className","replace","style","cursor","Button","outline","color","size","onClick","find","user","UncontrolledCollapse","toggler","messages","message","Alert","messagesBlock","modalWindow","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Input","defaultValue","onChange","e","target","value","ModalFooter","Card","CardBody","Row","Col","md","overflowY","maxHeight","ListGroup","length","name","placeholder","disabled","StudentsContainer","data","Message","sendMessage","ref","useRef","selected","setSelected","textInTextArea","setInTextArea","isBtnSendDisabled","setBtnSendDisabled","isBtnClearDisabled","setBtnClearDisabled","isAlertSendMessage","setAlertSendMessage","userSelected","textareaAndBtn","type","alertSendMessage","typeAhead","labelKey","option","item","onInputChange","options","current","clear","MessageContainer","setIsOpen","Navbar","light","expand","Container","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","to","exact","Layout","props","children","App","dataList","setDataList","useEffect","fetch","then","res","json","catch","err","console","error","Header","path","findIndex","userItem","slice","userId","updatedMessages","userWithNewMessage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bc83380.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  FormGroup,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  UncontrolledCollapse,\r\n  Alert,\r\n} from 'reactstrap';\r\n\r\nconst Students = ({ list, addUser, editUser, deleteUser }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const [editCurrentItem, setEditCurrentItem] = useState('');\r\n\r\n  const [firstNameEdited, editFirstName] = useState('');\r\n  const [lastNameEdited, editLastName] = useState('');\r\n\r\n  const [isModalShow, setModal] = useState(false);\r\n\r\n  const editMode = (id) => {\r\n    setEditCurrentItem(list.find((user) => user.id === id));\r\n    toggleModal();\r\n  };\r\n\r\n  const toggleModal = () => setModal(!isModalShow);\r\n\r\n  const randomId = parseInt(Math.random(new Date()) * 1000000);\r\n\r\n  const isAddStudentValid = !(firstName !== '' && lastName !== '');\r\n\r\n  const messagesBlock = (student) => (\r\n    <UncontrolledCollapse\r\n      toggler={`#${student.lastName.replace(/\\s/g, '') + student.id}`}\r\n    >\r\n      <div className='mt-3'>\r\n        <p>Messages:</p>\r\n        {student.messages.map((message) => {\r\n          return (\r\n            <Alert color='info' key={message.id}>\r\n              {message.message}\r\n            </Alert>\r\n          );\r\n        })}\r\n      </div>\r\n    </UncontrolledCollapse>\r\n  );\r\n\r\n  const studentsList = list.map((student, index) => {\r\n    return (\r\n      <ListGroupItem key={student.id + student.lastName}>\r\n        <div className='d-flex align-items-center'>\r\n          <div\r\n            className='flex-fill'\r\n            id={student.lastName.replace(/\\s/g, '') + student.id}\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            {index + 1}.{' '}\r\n            <strong>\r\n              {student.firstName} {student.lastName}\r\n            </strong>\r\n          </div>\r\n\r\n          <Button\r\n            outline\r\n            color='info'\r\n            size='sm'\r\n            onClick={() => editMode(student.id)}\r\n            className='ml-2'\r\n          >\r\n            Edit\r\n          </Button>\r\n\r\n          <Button\r\n            outline\r\n            color='danger'\r\n            size='sm'\r\n            onClick={() => deleteUser(student.id)}\r\n            className='ml-2'\r\n          >\r\n            Remove\r\n          </Button>\r\n        </div>\r\n\r\n        {messagesBlock(student)}\r\n      </ListGroupItem>\r\n    );\r\n  });\r\n\r\n  const modalWindow = (\r\n    <Modal isOpen={isModalShow} toggle={toggleModal}>\r\n      <ModalHeader toggle={toggleModal}>Edit student</ModalHeader>\r\n\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <Input\r\n            defaultValue={editCurrentItem.firstName}\r\n            onChange={(e) => editFirstName(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <Input\r\n          defaultValue={editCurrentItem.lastName}\r\n          onChange={(e) => editLastName(e.target.value)}\r\n        />\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <Button\r\n          color='primary'\r\n          onClick={() => {\r\n            editUser({\r\n              id: editCurrentItem.id,\r\n              firstName: firstNameEdited || editCurrentItem.firstName,\r\n              lastName: lastNameEdited || editCurrentItem.lastName,\r\n              messages: editCurrentItem.messages,\r\n            });\r\n            toggleModal();\r\n          }}\r\n        >\r\n          Save\r\n        </Button>{' '}\r\n        <Button color='secondary' onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <h4 className='mb-4'>Students list</h4>\r\n\r\n        <Row>\r\n          <Col md='8'>\r\n            <div style={{ overflowY: 'auto', maxHeight: 500 }}>\r\n              <ListGroup>\r\n                {studentsList.length > 0 ? (\r\n                  studentsList\r\n                ) : (\r\n                  <Alert color='warning'>Empty list!</Alert>\r\n                )}\r\n              </ListGroup>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col md='4'>\r\n            <div className='mb-4'>\r\n              <FormGroup>\r\n                <Input\r\n                  name='firstName'\r\n                  id='newFirstName'\r\n                  placeholder='First Name'\r\n                  value={firstName}\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <Input\r\n                  name='lastName'\r\n                  id='newLastName'\r\n                  placeholder='Last Name'\r\n                  value={lastName}\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <Button\r\n                color='success'\r\n                size='sm'\r\n                disabled={isAddStudentValid}\r\n                onClick={() => {\r\n                  addUser({\r\n                    id: randomId,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    messages: [],\r\n                  });\r\n                  setFirstName('');\r\n                  setLastName('');\r\n                }}\r\n              >\r\n                Add Student\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        {modalWindow}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n","import React from 'react';\r\nimport Students from './Students';\r\n\r\nconst StudentsContainer = ({ data, addUser, editUser, deleteUser }) => {\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Students\r\n      list={data}\r\n      addUser={addUser}\r\n      editUser={editUser}\r\n      deleteUser={deleteUser}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StudentsContainer;\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\n\r\nconst Message = ({ list, sendMessage }) => {\r\n  const ref = useRef();\r\n  const [selected, setSelected] = useState([]);\r\n  const [textInTextArea, setInTextArea] = useState('');\r\n  const [isBtnSendDisabled, setBtnSendDisabled] = useState(true);\r\n  const [isBtnClearDisabled, setBtnClearDisabled] = useState(true);\r\n  const [isAlertSendMessage, setAlertSendMessage] = useState(false);\r\n\r\n  const randomId = parseInt(Math.random(new Date()) * 1000000);\r\n\r\n  const onChangeTypeahead = (item) => {\r\n    setSelected(item);\r\n    setBtnClearDisabled(false);\r\n    setAlertSendMessage(false);\r\n    setBtnSendDisabled(true);\r\n  };\r\n\r\n  const onInputChangeTypeahead = (value) => {\r\n    if (value === '') {\r\n      setBtnClearDisabled(true);\r\n    } else {\r\n      setBtnClearDisabled(false);\r\n    }\r\n  };\r\n\r\n  const handleClearTypeahead = () => {\r\n    ref.current.clear();\r\n\r\n    setSelected([]);\r\n    setBtnClearDisabled(true);\r\n    setInTextArea('');\r\n  };\r\n\r\n  const onChangeTextarea = (e) => {\r\n    setInTextArea(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      setBtnSendDisabled(true);\r\n    } else {\r\n      setBtnSendDisabled(false);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    sendMessage(userSelected, {\r\n      id: randomId,\r\n      message: textInTextArea,\r\n    });\r\n    setInTextArea('');\r\n    setAlertSendMessage(true);\r\n  };\r\n\r\n  const userSelected = selected.length === 1 && selected[0];\r\n  const textareaAndBtn = selected.length === 1 && !isAlertSendMessage && (\r\n    <div>\r\n      <FormGroup>\r\n        <Input\r\n          type='textarea'\r\n          name='text'\r\n          id='exampleText'\r\n          placeholder='Input message'\r\n          defaultValue={textInTextArea}\r\n          onChange={onChangeTextarea}\r\n        />\r\n      </FormGroup>\r\n\r\n      <FormGroup>\r\n        <Button\r\n          color='primary'\r\n          disabled={isBtnSendDisabled}\r\n          onClick={() => handleSendMessage()}\r\n        >\r\n          Send message\r\n        </Button>\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n\r\n  const alertSendMessage = selected.length === 1 && isAlertSendMessage && (\r\n    <Alert color='success'>\r\n      Your message for {userSelected.firstName} {userSelected.lastName} has been\r\n      sent successfully!\r\n    </Alert>\r\n  );\r\n\r\n  const typeAhead = (\r\n    <FormGroup>\r\n      <div className='d-flex'>\r\n        <div className='flex-fill mr-3'>\r\n          <Typeahead\r\n            id='students-list'\r\n            labelKey={(option) => `${option.firstName} ${option.lastName}`}\r\n            ref={ref}\r\n            onChange={onChangeTypeahead}\r\n            onInputChange={(e) => onInputChangeTypeahead(e)}\r\n            placeholder='Choose a student...'\r\n            options={list}\r\n          />\r\n        </div>\r\n        <Button onClick={handleClearTypeahead} disabled={isBtnClearDisabled}>\r\n          Clear\r\n        </Button>\r\n      </div>\r\n    </FormGroup>\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <h4 className='mb-4'>Send message to anybody</h4>\r\n\r\n        <Row>\r\n          <Col md='8'>\r\n            {typeAhead}\r\n            {textareaAndBtn}\r\n            {alertSendMessage}\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nimport Message from './Message';\r\n\r\nconst MessageContainer = ({ data, sendMessage }) => {\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  return <Message list={data} sendMessage={sendMessage} />;\r\n};\r\n\r\nexport default MessageContainer;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Students = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <Navbar color='light' light expand='md' className='mb-5'>\r\n      <Container>\r\n        <NavbarBrand href='/'>\r\n          <strong>StudentsLab</strong>\r\n        </NavbarBrand>\r\n\r\n        <NavbarToggler onClick={toggle} />\r\n\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className='mr-auto' navbar>\r\n            <NavItem className='mr-3'>\r\n              <NavLink to='/' exact className='nav-link'>\r\n                Home\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className='mr-3'>\r\n              <NavLink to='/message' className='nav-link'>\r\n                Send Message\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>{props.children}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nimport { StudentsContainer, MessageContainer } from './pages/index';\nimport { Header, Layout } from './components/index';\n\nconst App = () => {\n  const [dataList, setDataList] = useState(null);\n\n  const handleEditUser = (user) => {\n    const index = dataList.findIndex((userItem) => userItem.id === user.id);\n\n    setDataList([\n      ...dataList.slice(0, index),\n      user,\n      ...dataList.slice(index + 1),\n    ]);\n  };\n\n  const handleAddUser = (user) => {\n    setDataList([...dataList, user]);\n  };\n\n  const handleDeleteUser = (userId) => {\n    const index = dataList.findIndex((user) => user.id === userId);\n\n    setDataList([\n      ...dataList.slice(0, index),\n      ...dataList.slice(index + 1, dataList.length),\n    ]);\n  };\n\n  const handleSendMessage = (user, message) => {\n    const updatedMessages = [...user.messages, message];\n    const userWithNewMessage = { ...user, messages: updatedMessages };\n    const index = dataList.findIndex((userItem) => userItem.id === user.id);\n\n    setDataList([\n      ...dataList.slice(0, index),\n      userWithNewMessage,\n      ...dataList.slice(index + 1),\n    ]);\n  };\n\n  const getData = (url) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setDataList(data);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  useEffect(() => {\n    getData('/data.json');\n  }, []);\n\n  return (\n    <Router>\n      <Header />\n\n      <Layout>\n        <Switch>\n          <Route path='/' exact>\n            <StudentsContainer\n              data={dataList}\n              editUser={handleEditUser}\n              addUser={handleAddUser}\n              deleteUser={handleDeleteUser}\n            />\n          </Route>\n\n          <Route path='/message'>\n            <MessageContainer data={dataList} sendMessage={handleSendMessage} />\n          </Route>\n\n          <Route path='*'>\n            <Redirect to='/' />\n          </Route>\n        </Switch>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}